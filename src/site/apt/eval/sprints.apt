		-----------
		Sprint Plan
		-----------
		Eric Dubuis
		--------------
		September 29, 2017; updated September 2018
		--------------


Sprint Plan of Project Student Administration System 'Academia'

* Introduction

	The goal of this project is to simulate the incremental, iterative,
and agile software development process SCRUM. It is incremental in the sense
that functionality (and, thus, business value) is provided in an
incremental manner. It is iterative in so far that many development
activities (use case modeling, design, coding, testing, documentation, ...)
occur repeatedly. It is agile such that changes in customer requirements
can be handled (rather) easily.

	[Note:]	Do not edit or modify this document. This document is
			managed by your lecturer.


* Schedule of Sprints

	This is the sprint plan:

[../images/project_sprints.png]

	The following sprints and deliverables are planned:

*------------------------------------------------+-----------------------*-----------------*------------------*
| Sprint/Deliverable								| Due date (end of week)| Max points	  	  | Git tag			|
*------------------------------------------------+-----------------------*-----------------*------------------*
| Sprint 1/{{{./s1.html}Deliverable 1 (D1)}}	| 41 / 4	| 		50		  | del1				|
*------------------------------------------------+-----------------------*-----------------*------------------*
| Sprint 2/{{{./s2.html}Deliverable 2 (D2)}}	| 44 / 7	|		50		  | del2				|
*------------------------------------------------+-----------------------*-----------------*------------------*
| Sprint 3/{{{./s3.html}Deliverable 3 (D3)}}	| 47 / 10	|		50		  | del3				|
*------------------------------------------------+-----------------------*-----------------*------------------*
| Sprint 4/{{{./s4.html}Deliverable 4 (D4)}}	| 51 / 14	|		100		  | del4				|
*------------------------------------------------+-----------------------*-----------------*------------------*
|										Total 	| 						|		250		  |					|
*------------------------------------------------+-----------------------*-----------------*------------------*
Planning of sprints and deliverables.


	[Note:]	Each deadline is Friday evening. However, you can provide
			your deliverables till the following Sunday evening, 12 pm.


* Deliverables and Git Branches

	Here I give a few rules how to work with Git branches:

	* Performing the first sprint "Sprint 1", you work on a branch called "sprint1".
		You have to create the "sprint1" branch. Instructions follow.
		Upon making the deliverable, you have to merge your code onto the "master" branch.

	* To produce the first deliverable "del1", tag the deliverable on the master
		branch. The tagged version will be evaluated.

	* During the sprint "k", k > 1, each developer "i", i = 1, 2, ..., takes a task "t"
		and works on that task. To do so, create a branch named "task_t" originating
		from the development branch "sprint_k". Work on that branch until the task is finished.
		As soon as the task is finished, or even more frequently, merge it to the "sprint_k" branch,
		and perform the integration tests there.

	* To produce the deliverable "k", k > 0, merge the "sprint_k"
		branch onto the "master" trunk. Tag the deliverable with the
		"del_k", k > 0.

	[]

	The branches of the Git repository may then look like:

---
developer_i (task_t)          ++   +--+ ...
                             /  \ /    \
sprint_k                    +----+------+------+     sprint_k
                           /      \      \      \
master                    +--------+------+------+-  master
                                   ^      ^      ^
tags                              del1   del2   ...
---
